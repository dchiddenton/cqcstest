clear echo

description

  Copyright by Bluebird Auto Rental Systems Ltd 2019.
  All rights reserved.

  Report: Contract Revenue By Vehicle Report
  Author: David Chiddenton
  $Revision: 2 $;
  
/*------------------------------------------------------------------------
Created: 7/4/2017
Modified:

Notes:
$Workfile: profloss.mf $                              
$Archive: /AutoMate2/Version 5.0/Source/cqcs/profloss.mf $
$Revision: 2 $
$History: profloss.mf $
 * 
 * *****************  Version 2  *****************
 * User: Dchidden     Date: 9/12/19    Time: 11:52a
 * Updated in $/AutoMate2/Version 5.0/Source/cqcs
 * Add revision number to view in About screen
 * 
 * *****************  Version 1  *****************
 * User: Dchidden     Date: 9/11/19    Time: 1:27p
 * Created in $/AutoMate2/Version 5.0/Source/cqcs
 * Initial creation
------------------------------------------------------------------------*/

/*------------------------------------------------------------------------
 Retrieve standard parameters and create custom parameters
------------------------------------------------------------------------*/

run/parameterfile parameters.mf

/*------------------------------------------------------------------------
 Create user interface include file
------------------------------------------------------------------------*/
define
 
  date dtsdate = parameter prompt "Starting Date" default todaysdate-day(todaysdate)+1;
  date dtedate = parameter Prompt "Ending Date"  error "Error: End date < Start date" if dtEdate < dtSdate default todaysdate;
  include "param_loc.cq"
  include "param_locgroup.cq"
  include "param_product.cq"
  string crange = range parameter prompt "Enter Unit# Range (Start..End or ALL): " default ALL
  string csort = parameter prompt "Sort Within Model by: "  valid "Unit Number","Net Revenue","Class" default "Unit Number"
  string caccrue = parameter prompt "Report Accrued Income: " valid "Exclude", "As of Date", "Due Date" default "Exclude"
  string csold = parameter/uppercase prompt "Include Sold Cars? " valid "Y","N" default "Y"
  string cprorate = parameter/uppercase prompt "Pro-rate Revenue to Report Range? " valid "Y","N" default "N"

;
replace profloss_i1.inc
/*------------------------------------------------------------------------
 Retrieve TPM from closed contracts - setup parameters
------------------------------------------------------------------------*/

include "profloss_i1.inc"

define


  file alt_locgroup = access locgroup,
    set locgroup:groupname = clocgroup,
    locgroup:locationcode = rrm:rptloccode,
    null fill on failure

  file renterlink = access renter,
    set renter:renterid = rrm:renterid,
    using first index,
    one to one,
    exact,
    null fill on failure

  file rental_link = access rentaldb,
    set rentaldb:commonid=rrm:commonid,
    one to one, null fill on failure

  number accrual_flag = 0

where (rrm:rptdate >= dtSdate and rrm:rptdate <= dtEdate)
     and rrm:rastatus=3
     and rrm:product = cproduct
     and rrm:rptloccode = cLoc
     and (cLocGroup = "" or cLocGroup = alt_locgroup:groupname)
     
 
list/domain="rrm"/hold="PL1_hf"

  rrm:commonid
  rrm:rptloccode
  rrm:locationcodeout
  rrm:datein
  rrm:timein
  rrm:dateout
  rrm:timeout
  rrm:datedue
  rrm:timedue
  rrm:rptdate
  rrm:ranumber
  rrm:resnumber
  rental_link:employeenumberout
  rental_link:totaltpm
  rental_link:taxamtsales
  rental_link:rentaldiscountamt
  0/width=10/name="type"
  0/decimalplaces=2/width=14/name="tot_amt"  -- place holder for ancilliary sales
  rental_link:actmiles
  renterlink:customerlastname
  renterlink:systemid
  accrual_flag

;
replace profloss_1.eq
run/setparameter profloss_1.eq

run/parameterfile=profloss_1 profloss_1.eq

/*------------------------------------------------------------------------
 Accrual TPM revenue
------------------------------------------------------------------------*/

include "profloss_i1.inc"

define

  file alt_locgroup = access locgroup,
    set locgroup:groupname = clocgroup,
    locgroup:locationcode = rrm:rptloccode,
    null fill on failure

  file renterlink = access renter,
    set renter:renterid = rrm:renterid,
    using first index,
    one to one,
    exact,
    null fill on failure

  file rental_link = access rentaldb,
    set rentaldb:commonid=rrm:commonid,
    one to one, null fill on failure

  number accrual_flag = 1

where  (rrm:dateout <= dtEdate and rrm:rastatus=2)
     and rrm:product = cproduct
     and rrm:rptloccode = cLoc
     and (cLocGroup = "" or cLocGroup = alt_locgroup:groupname)
 

list/domain="rrm"/hold="PL1_hf"/append
if caccrue <> "Exclude" then {
   rrm:commonid
  rrm:rptloccode
  rrm:locationcodeout
  rrm:datein
  rrm:timein
  rrm:dateout
  rrm:timeout
  rrm:datedue
  rrm:timedue
  rrm:rptdate
  rrm:ranumber
  rrm:resnumber
  rental_link:employeenumberout
  rental_link:totaltpm
  rental_link:taxamtsales
  rental_link:rentaldiscountamt
  0/width=10/name="type"
  0/decimalplaces=2/width=14/name="tot_amt"  -- place holder for ancilliary sales
  rental_link:actmiles
  renterlink:customerlastname
  renterlink:systemid
  accrual_flag
}

;
run/parameterfile=profloss_1

/*------------------------------------------------------------------------
 Rcmift closed contracts
------------------------------------------------------------------------*/
include "profloss_i1.inc"

define

  file alt_locgroup = access locgroup,
    set locgroup:groupname = clocgroup,
    locgroup:locationcode = rcmift:rptloccode,
    null fill on failure

  file rrm_link = access rrm,
   set rrm:commonid=rcmift:commonid,
   one to one,zero fill on failure

  file renterlink = access renter,
    set renter:renterid = rrm_link:renterid,
    using first index,
    one to one,
    exact,
    null fill on failure

  file rental_link = access rentaldb,
    set rentaldb:commonid=rrm_link:commonid,
    one to one, null fill on failure

  number accrual_flag = 0

where (rcmift:rptdate >= dtSdate and rcmift:rptdate <= dtEdate) 
     
     and rrm:product = cproduct
     and rrm:rptloccode = cLoc
     and (cLocGroup = "" or cLocGroup = alt_locgroup:groupname)

list/domain="rcmift"/hold="PL1_hf"/append
if (rcmift:rev=1 and rcmift:type < 50 and rrm_link:rastatus = 3) then {
  rcmift:commonid
  rcmift:rptloccode
  rrm_link:locationcodeout
  rrm_link:datein
  rrm_link:timein
  rrm_link:dateout
  rrm_link:timeout
  rrm_link:datedue
  rrm_link:timedue
  rrm_link:rptdate
  rrm_link:ranumber
  rrm_link:resnumber
  rental_link:employeenumberout
  0/decimalplaces=2/width=14/name="totaltpm"  -- place holder for TPM
  0/decimalplaces=2/width=14/name="taxamtsales"
  0/decimalplaces=2/width=14/name="rentaldiscountamt"
  rcmift:type/width=10
  rcmift:total/decimalplaces=2/width=14/name="tot_amt"  
  rental_link:actmiles
  renterlink:customerlastname
  renterlink:systemid
  accrual_flag
}

;
run/parameterfile=profloss_1 

/*------------------------------------------------------------------------
 rcmift accrued
------------------------------------------------------------------------*/
include "profloss_i1.inc"

define

  file alt_locgroup = access locgroup,
    set locgroup:groupname = clocgroup,
    locgroup:locationcode = rrm:rptloccode,
    null fill on failure

  file rcmift_link = access rcmift,
    set rcmift:commonid=rrm:commonid,
    one to many, zero fill on failure

  file renterlink = access renter,
    set renter:renterid = rrm:renterid,
    using first index,
    one to one,
    exact,
    null fill on failure

  file rental_link = access rentaldb,
    set rentaldb:commonid=rrm:commonid,
    one to one, null fill on failure

  number accrual_flag = 1

where  (rrm:dateout <= dtEdate and rrm:rastatus=2)
     and rrm:product = cproduct
     and rrm:rptloccode = cLoc
     and (cLocGroup = "" or cLocGroup = alt_locgroup:groupname)
 

list/domain="rrm"/hold="PL1_hf"/append
if (rcmift_link:rev=1 and rcmift_link:type<50 and caccrue <> "Exclude") then {
  rcmift_link:commonid
  rcmift_link:rptloccode
  rrm:locationcodeout
  rrm:datein
  rrm:timein
  rrm:dateout
  rrm:timeout
  rrm:datedue
  rrm:timedue
  rrm:rptdate
  rrm:ranumber
  rrm:resnumber
  rental_link:employeenumberout
  0/decimalplaces=2/width=14/name="totaltpm"  -- place holder for TPM
  0/decimalplaces=2/width=14/name="taxamtsales"
  0/decimalplaces=2/width=14/name="rentaldiscountamt"
  rcmift_link:type/width=10
  rcmift_link:total/decimalplaces=2/width=14/name="tot_amt"  
  rental_link:actmiles
  renterlink:customerlastname
  renterlink:systemid
  accrual_flag
}

;
run/parameterfile=profloss_1 
/*------------------------------------------------------------------------
 Total by commonid
------------------------------------------------------------------------*/

list/domain="PL1_hf"/nodetail/hold="PL2_hf"
  PL1_hf:commonid 
  PL1_hf:rptloccode 
  PL1_hf:locationcodeout 
  PL1_hf:datein 
  PL1_hf:timein 
  PL1_hf:dateout 
  PL1_hf:timeout 
  PL1_hf:datedue 
  PL1_hf:timedue 
  PL1_hf:rptdate 
  PL1_hf:ranumber 
  PL1_hf:resnumber 
  PL1_hf:employeenumberout 
  PL1_hf:totaltpm 
  PL1_hf:taxamtsales 
  PL1_hf:rentaldiscountamt 
  PL1_hf:type 
  PL1_hf:tot_amt 
  PL1_hf:actmiles 
  PL1_hf:customerlastname 
  PL1_hf:systemid 
  PL1_hf:accrual_flag

sorted by PL1_hf:commonid

end of PL1_hf:commonid
  PL1_hf:commonid /keyelement=1.1
  PL1_hf:rptloccode 
  PL1_hf:locationcodeout 
  PL1_hf:datein 
  PL1_hf:timein 
  PL1_hf:dateout 
  PL1_hf:timeout 
  PL1_hf:datedue 
  PL1_hf:timedue 
  PL1_hf:rptdate 
  PL1_hf:ranumber 
  PL1_hf:resnumber 
  PL1_hf:employeenumberout 
  running total[PL1_hf:totaltpm ,PL1_hf:commonid]/name="totaltpm"
  running total[PL1_hf:taxamtsales,PL1_hf:commonid] /name="taxamtsales"
  running total[PL1_hf:rentaldiscountamt,PL1_hf:commonid] /name="rentaldiscountamt"
  PL1_hf:type 
  running total[PL1_hf:tot_amt,PL1_hf:commonid] /name="tot_amt"
  PL1_hf:actmiles 
  PL1_hf:customerlastname 
  PL1_hf:systemid 
  PL1_hf:accrual_flag

;
run/parameterfile=profloss_1 
/*------------------------------------------------------------------------
 Allocate rental info to all inventory records on RA
 and calculate the prorate factor
------------------------------------------------------------------------*/

include "profloss_i1.inc"

define

  file inv_link = access invtrx,
    set invtrx:commonid = PL2_hf:commonid,
    one to many

  date date_in = if (inv_link:datein = null and caccrue = "Due Date") then PL2_hf:datedue  -- inv date/time
   else if inv_link:datein = null then dtedate else inv_link:datein

  number time_in = if (inv_link:timein = 0 and caccrue = "Due Date") then PL2_hf:timedue
   else if inv_link:timein = 0 then 23.59 else inv_link:timein 

  date datein = if (PL2_hf:datein = null and caccrue = "Due Date") then PL2_hf:datedue  -- RA date/time
   else if PL2_hf:datein = null then dtedate else PL2_hf:datein

  number timein = if (PL2_hf:timein = 0 and caccrue = "Due Date") then PL2_hf:timedue
   else if PL2_hf:timein = 0 then 23.59 else PL2_hf:timein

  number ra_days = if (datein - PL2_hf:dateout = 0) then 1 else (datein - PL2_hf:dateout)
  date prorate_out = if PL2_hf:dateout < dtsdate then dtsdate else PL2_hf:dateout
  date prorate_in = if datein > dtedate then  dtedate else datein
  number prorate_days = if (prorate_in - prorate_out = 0) then 1 else if (prorate_in - prorate_out < 0) then 0 else (prorate_in - prorate_out)

  number proration_factor_rev = if cprorate = "Y" then if (prorate_days divide ra_days < 0) then 0 else (prorate_days divide ra_days)
    else 1

  number inv_miles = inv_link:odometerin - inv_link:odometerout

list/domain="PL2_hf"/hold="PL3_hf"
  inv_link:unitnumber
  inv_link:product
  inv_link:invclass
  inv_link:invid 
  inv_link:dateout
  inv_link:timeout 
  date_in /name="datein"
  time_in /name="timein"
  inv_link:locationcodeout 
  PL2_hf:ranumber 
  PL2_hf:commonid /keyelement=1.1
  PL2_hf:tot_amt
  PL2_hf:accrual_flag
  if inv_miles < 0 then 0 else inv_miles/name="actmiles"
  PL2_hf:totaltpm
  PL2_hf:rentaldiscountamt
  PL2_hf:locationcodeout/name="rrm_loc"
  PL2_hf:dateout/name="rrm_dateout"
  PL2_hf:timeout/name="rrm_timeout"
  PL2_hf:datein/name="rrm_datein"
  PL2_hf:timein/name="rrm_timein"
  PL2_hf:rptdate/name="rrm_rptdate"
  PL2_hf:datedue/name="rrm_datedue"
  PL2_hf:timedue/name="rrm_timesdue"
  proration_factor_rev
  ra_days
  prorate_out 
  prorate_in 
  prorate_days

;
run/parameterfile=profloss_1 
/*------------------------------------------------------------------------
 Allocate revenue to flt trx time
------------------------------------------------------------------------*/
include "profloss_i1.inc"

define

  date date_in = if cprorate = "Y" then PL3_hf:prorate_in else
   if PL3_hf:accrual_flag=1 then 
      if caccrue = "Due Date" then PL3_hf:rrm_datedue else dtedate else PL3_hf:rrm_datein 

  number time_in = if PL3_hf:accrual_flag=1 then 
     if caccrue = "Due Date" then PL3_hf:rrm_timesdue else 23.59 else PL3_hf:rrm_timein

  timestamp cbegtimetot = timestamp(PL3_hf:rrm_dateout,time(replace(str(PL3_hf:rrm_timeout,"99.99"),".",":")))
  timestamp cendtimetot = timestamp(date_in,time(replace(str(time_in,"99.99"),".",":"))) 

  interval period_lentot = cendtimetot - cbegtimetot  
  number mins_pertot =   val(period_lentot) div 60


  timestamp cbegtime = timestamp(PL3_hf:dateout,time(replace(str(PL3_hf:timeout,"99.99"),".",":")))
  timestamp cendtime = timestamp(PL3_hf:datein,time(replace(str(PL3_hf:timein,"99.99"),".",":")))

  interval period_len = cendtime - cbegtime  
  number mins_per =   val(period_len) div 60

  number proration_factor_inv = mins_per divide mins_pertot


  number tot_days = if (round(mins_per divide 1440,2) - trunc(round(mins_per divide 1440,2))) > 0.05 then
    trunc(round(mins_per divide 1440,2)) + 1 else trunc(round(mins_per divide 1440,2))

  number days_out = if cprorate = "Y" then pl3_hf:prorate_days else
    if proration_factor_inv = 1 then if (mins_per divide 1440) < 1 then 1 else tot_days else tot_days

 
  number tpm = round(PL3_hf:totaltpm * proration_factor_inv * PL3_hf:proration_factor_rev,2)
  number discount = round(PL3_hf:rentaldiscountamt * proration_factor_inv * PL3_hf:proration_factor_rev,2)
  number all_other = round(PL3_hf:tot_amt * proration_factor_inv * PL3_hf:proration_factor_rev,2)

  number tot_est =  tpm - discount + all_other 
 
list/domain="PL3_hf"/nodetail/hold="rev_hf"

  PL3_hf:invid
  PL3_hf:product
  PL3_hf:unitnumber
  PL3_hf:ranumber
  days_out
  PL3_hf:actmiles
  tot_est


sorted by PL3_hf:invid

end of PL3_hf:invid
  PL3_hf:invid/keyelement=1.1
  PL3_hf:product
  PL3_hf:unitnumber/keyelement=2.1
  running total[days_out,PL3_hf:invid]/name="day_tot"
  running total[PL3_hf:actmiles,PL3_hf:invid]/name="miles_tot"
  running total[tot_est,PL3_hf:invid]/name="rev_tot"
  running count[PL3_hf:ranumber,PL3_hf:invid]/name="ra_count"

;
run/parameterfile=profloss_1 
/*------------------------------------------------------------------------
 Build inventory list from time period for current fleet
------------------------------------------------------------------------*/

include "profloss_i1.inc"

  file owned_link = access location,
   set location:locationcode=inv:ownedlocationcode

  file bank_link = access banks,
   set banks:bankid=inv:bankid
   
  file rev_link = access rev_hf,
   set rev_hf:invid=inv:invid,
   one to one, zero fill on failure

  file alt_locgroup = access locgroup,
    set locgroup:groupname = clocgroup,
    locgroup:locationcode = inv:ownedlocationcode,
    null fill on failure

  date depr_end = if inv:datesold = null then dtEdate + 1 else 
    if inv:datesold < dtEdate then inv:datesold + 1 else dtEdate + 1
  date depr_start = if inv:inservicedate = null then dtSdate else
    if inv:inservicedate > dtSdate then inv:inservicedate else dtSdate

  number idays = if (depr_end - depr_start < 0) then 0 else (depr_end - depr_start)
  number depr_cost_calc = if inv:opdailydeppct <> 0 then round((opdailydeppct * inv:acquisitionprice) * idays ,2)
   else if inv:opmonthlydeppct <> 0 then round((((inv:opmonthlydeppct divide 100) * inv:acquisitionprice) divide 30)* idays,2)
   else if inv:opmonthlydepamt <> 0 then round((inv:opmonthlydepamt * 12 divide 365) * idays,2)
  number depr_cost = if bank_link:financetype = "Lease" then round((inv:paymentamount * 12 divide 365)* idays,2)  -- Lease vehicle use monthly pmt calc
   else if depr_cost_calc > inv:acquisitionprice then inv:acquisitionprice else depr_cost_calc

where ((inv:inservicedate <= dtEdate and
 ((inv:outservicedate >= dtsdate or inv:outservicedate = null)and(inv:datesold >= dtsdate or inv:datesold = null)))
    or rev_link:invid <>0)  --ensure current veh on contracts included
  and owned_link:owned=1
  and inv:product = cproduct
  and inv:unitnumber = crange
  and inv:ownedlocationcode = cLoc
  and (cLocGroup = "" or cLocGroup = alt_locgroup:groupname)


list/domain="inv"/hold="inv_hf"
  inv:product
  inv:unitnumber
  inv:model  
  inv:invclass
  inv:year
  inv:buybackprogram
  inv:invid/keyelement = 1.1
  0/width=2/name="sold_flag"
  depr_cost

;
run/parameterfile=profloss_1 
/*------------------------------------------------------------------------
  Build inventory list from time period for sold fleet
------------------------------------------------------------------------*/

include "profloss_i1.inc"

  file owned_link = access location,
   set location:locationcode=invsold:ownedlocationcode

  file bank_link = access banks,
   set banks:bankid=invsold:bankid

  file rev_link = access rev_hf,
   set rev_hf:invid=invsold:invid,
   one to one, zero fill on failure

   

  file alt_locgroup = access locgroup,
    set locgroup:groupname = clocgroup,
    locgroup:locationcode = invsold:ownedlocationcode,
    null fill on failure

  date depr_end = if invsold:datesold = null then dtEdate + 1 else 
    if invsold:datesold < dtEdate then invsold:datesold + 1 else dtEdate + 1
  date depr_start = if invsold:inservicedate = null then dtSdate else
    if invsold:inservicedate > dtSdate then invsold:inservicedate else dtSdate

  number idays = if (depr_end - depr_start < 0) then 0 else (depr_end - depr_start)
  number depr_cost_calc = if invsold:opdailydeppct <> 0 then round((opdailydeppct * invsold:acquisitionprice) * idays ,2)
   else if invsold:opmonthlydeppct <> 0 then round((((invsold:opmonthlydeppct divide 100) * invsold:acquisitionprice) divide 30)* idays,2)
   else if invsold:opmonthlydepamt <> 0 then round((invsold:opmonthlydepamt * 12 divide 365) * idays,2)
  number depr_cost = if bank_link:financetype = "Lease" then round((invsold:paymentamount * 12 divide 365)* idays,2)  -- Lease vehicle use monthly pmt calc
   else if depr_cost_calc > invsold:acquisitionprice then invsold:acquisitionprice else depr_cost_calc

where ((invsold:inservicedate <= dtEdate and 
  ((invsold:outservicedate > dtsdate or invsold:outservicedate = null)and(invsold:datesold > dtsdate or invsold:datesold = null)))
    or rev_link:invid <>0)  --ensure sold veh on contracts included
  and owned_link:owned=1
  and invsold:product = cproduct
  and invsold:unitnumber = crange
  and invsold:ownedlocationcode = cLoc
  and (cLocGroup = "" or cLocGroup = alt_locgroup:groupname)
  


list/domain="invsold"/hold="inv_hf"/append
if csold = "Y" then {
  invsold:product
  invsold:unitnumber
  invsold:model  
  invsold:invclass
  invsold:year
  invsold:buybackprogram
  invsold:invid/keyelement = 1.1
  1/width=2/name="sold_flag"
  depr_cost
}

;
run/parameterfile=profloss_1 
/*------------------------------------------------------------------------
 Ensure only 1 invid - remove sold duplicates
------------------------------------------------------------------------*/

list/domain="inv_hf"/nodetail/hold="inv2_hf"
  inv_hf:unitnumber 
  inv_hf:model 
  inv_hf:invclass
  inv_hf:year
  inv_hf:buybackprogram
  inv_hf:invid 
  inv_hf:sold_flag 
  inv_hf:depr_cost

sorted by
  inv_hf:invid
  inv_hf:sold_flag/descending

end of inv_hf:invid
  inv_hf:product
  inv_hf:unitnumber 
  inv_hf:model 
  inv_hf:invclass
  inv_hf:year
  inv_hf:buybackprogram
  inv_hf:invid /keyelement=1.1
  inv_hf:sold_flag 
  inv_hf:depr_cost

;
run/parameterfile=profloss_1 
/*------------------------------------------------------------------------
 Calculate RO costs
------------------------------------------------------------------------*/
viewpoint native;

include "profloss_i1.inc"

where invro:datein >= dtSdate and invro:datein <= dtEdate

sum/domain="invro"/hold="ro_hf"
  invro:laborcost
  invro:partscost

by
  invro:invid/keyelement=1.1
;
run/parameterfile=profloss_1 

/*------------------------------------------------------------------------
 Output Report
------------------------------------------------------------------------*/
viewpoint native;

include "profloss_i1.inc"

define
   file rev_link = access rev_hf,
    set rev_hf:invid=inv2_hf:invid,
    one to one, zero fill on failure

   file ro_link = access ro_hf,
    set ro_hf:invid=inv2_hf:invid,
    one to one, zero fill on failure

  number tot_cost = inv2_hf:depr_cost+ro_link:laborcost+ro_link:partscost
  number prof_loss = rev_link:rev_tot-inv2_hf:depr_cost 

  number rpt_days = dtedate - dtsdate + 1

list/domain="inv2_hf"/duplicates/noreporttotals/noheadings/nobanner/pageof/pagelength=70/title="Vehicle Profit/Loss Report"

  inv2_hf:unitnumber/displaywidth=10/name="a"
  inv2_hf:year/displaywidth=5/nocommas/name="b"
  inv2_hf:invclass/displaywidth=8/name="c"
  rev_link:ra_count/displaywidth=5/name="d"
  rev_link:miles_tot/displaywidth=10/name="e"
  rev_link:day_tot/displaywidth=5/name="f"

  ro_link:laborcost/displaywidth=12/name="g"
  ro_link:partscost/displaywidth=12/name="h"
  inv2_hf:depr_cost/displaywidth=12/name="i"
  tot_cost/displaywidth=12/name="j"
  rev_link:rev_tot/displaywidth=12/name="k"
  prof_loss/displaywidth=12/name="l"


sorted by
  inv2_hf:model/page
  switch(csort)
   case "Unit Number"  : inv2_hf:unitnumber
   case "Class"        : inv2_hf:invclass
   default             : ""
if csort = "Net Revenue" then 
     prof_loss/descending

top of page
 "company_logo.jpg"/image/width=20/left/newline

 box/center/column=1
  "Date Range: "+str(dtsdate)+" to "+str(dtedate)/newline
  "Product: " + str(cProduct) + "  Unit Range: " + str(crange)/displaywidth=100/newline
  "Accruals: " + str(caccrue) + "  Sold incld: " + str(csold) + "  Prorate Income: " + str(cprorate)/newline
  if cLocgroup <> "" then "Location group: " + str(cLocGroup) else "Locations: " + str(cLoc)/displaywidth=100
  end box/newline=4

  "Product: "+str(inv2_hf:product)/displaywidth=20
  "Model: "+str(inv2_hf:model)/newline=2

  "Unit #"/align=a
  "Year"/align=b
  "Class"/align=c
  "RAs"/align=d
  "Mi/Km"/align=e
  "Days"/align=f
  "Labor Cost"/align=g
  "Parts Cost"/align=h
  "Vehicle Cost"/align=i
  "Total Cost"/align=j
  "Total Rev"/align=k
  "Profit/Loss"/align=l/newline

end of inv2_hf:model
  "Model "+inv2_hf:model+" Totals: "/align=a
  str(count[inv2_hf:unitnumber,inv2_hf:model])+" Units"/align=c
  running total[rev_link:ra_count,inv2_hf:model]/align=d
  running total[rev_link:miles_tot,inv2_hf:model]/align=e
  running total[rev_link:day_tot,inv2_hf:model]/align=f
  running total[ro_link:laborcost,inv2_hf:model]/align=g
  running total[ro_link:partscost,inv2_hf:model]/align=h
  running total[inv2_hf:depr_cost,inv2_hf:model]/align=i
  running total[tot_cost,inv2_hf:model]/align=j
  running total[rev_link:rev_tot,inv2_hf:model]/align=k
  running total[prof_loss,inv2_hf:model]/align=l/newline=2

  "Model "+inv2_hf:model+" Averages:"
  round(running total[rev_link:ra_count,inv2_hf:model] divide count[inv2_hf:unitnumber,inv2_hf:model],0) /align=d
  round(running total[rev_link:miles_tot,inv2_hf:model] divide count[inv2_hf:unitnumber,inv2_hf:model],0)/align=e
  round(running total[rev_link:day_tot,inv2_hf:model] divide count[inv2_hf:unitnumber,inv2_hf:model],0)/align=f
  round(running total[ro_link:laborcost,inv2_hf:model] divide count[inv2_hf:unitnumber,inv2_hf:model],2)/align=g
  round(running total[ro_link:partscost,inv2_hf:model] divide count[inv2_hf:unitnumber,inv2_hf:model],2)/align=h
  round(running total[inv2_hf:depr_cost,inv2_hf:model] divide count[inv2_hf:unitnumber,inv2_hf:model],2)/align=i
  round(running total[tot_cost,inv2_hf:model] divide count[inv2_hf:unitnumber,inv2_hf:model],2)/align=j
  round(running total[rev_link:rev_tot,inv2_hf:model] divide count[inv2_hf:unitnumber,inv2_hf:model],2)/align=k
  round(running total[prof_loss,inv2_hf:model] divide count[inv2_hf:unitnumber,inv2_hf:model],2)/align=l/newline

  "Report Day Averages:      Revenue per Day:"
  round(running total[rev_link:rev_tot,inv2_hf:model] divide rpt_days,2)/align=e
  "    Cost per Day:"
  round(running total[tot_cost,inv2_hf:model] divide rpt_days,2)/align=g
  "    Mileage per Day:"
  round(running total[rev_link:miles_tot,inv2_hf:model] divide rpt_days,0)/align=i
  "    Util %:"
  round(running total[rev_link:day_tot,inv2_hf:model] divide (rpt_days * count[inv2_hf:unitnumber,inv2_hf:model])*100,1)/align=j/newline

  "OnRent Day Averages:      Rev/Rental Day:"
  round(running total[rev_link:rev_tot,inv2_hf:model] divide running total[rev_link:day_tot,inv2_hf:model],2)/align=e
  "    Cost/Rental Day:"
  round(running total[tot_cost,inv2_hf:model] divide running total[rev_link:day_tot,inv2_hf:model],2)/align=g
  "    Mileage/Rental Day:"
  round(running total[rev_link:miles_tot,inv2_hf:model] divide running total[rev_link:day_tot,inv2_hf:model],0)/align=i/newline


end of report
  "Report Totals: "/align=a
  str(count[inv2_hf:unitnumber,report])+" Units"/align=c
  running total[rev_link:ra_count,report]/align=d
  running total[rev_link:miles_tot,report]/align=e
  running total[rev_link:day_tot,report]/align=f
  running total[ro_link:laborcost,report]/align=g
  running total[ro_link:partscost,report]/align=h
  running total[inv2_hf:depr_cost,report]/align=i
  running total[tot_cost,report]/align=j
  running total[rev_link:rev_tot,report]/align=k
  running total[prof_loss,report]/align=l/newline=2


  "Report Averages:"
  round(running total[rev_link:ra_count,report] divide count[inv2_hf:unitnumber,report],0) /align=d
  round(running total[rev_link:miles_tot,report] divide count[inv2_hf:unitnumber,report],0)/align=e
  round(running total[rev_link:day_tot,report] divide count[inv2_hf:unitnumber,report],0)/align=f
  round(running total[ro_link:laborcost,report] divide count[inv2_hf:unitnumber,report],2)/align=g
  round(running total[ro_link:partscost,report] divide count[inv2_hf:unitnumber,report],2)/align=h
  round(running total[inv2_hf:depr_cost,report] divide count[inv2_hf:unitnumber,report],2)/align=i
  round(running total[tot_cost,report] divide count[inv2_hf:unitnumber,report],2)/align=j
  round(running total[rev_link:rev_tot,report] divide count[inv2_hf:unitnumber,report],2)/align=k
  round(running total[prof_loss,report] divide count[inv2_hf:unitnumber,report],2)/align=l/newline
  "Report Day Averages:      Revenue per Day:"
  round(running total[rev_link:rev_tot,report] divide rpt_days,2)/align=e
  "    Cost per Day:"
  round(running total[tot_cost,report] divide rpt_days,2)/align=g
  "    Mileage per Day:"
  round(running total[rev_link:miles_tot,report] divide rpt_days,0)/align=i
  "    Util %:"
  round(running total[rev_link:day_tot,report] divide (rpt_days * count[inv2_hf:unitnumber,report])*100,1)/align=j/newline

  "OnRent Day Averages:      Rev/Rental Day:"
  round(running total[rev_link:rev_tot,report] divide running total[rev_link:day_tot,report],2)/align=e
  "    Cost/Rental Day:"
  round(running total[tot_cost,report] divide running total[rev_link:day_tot,report],2)/align=g
  "    Mileage/Rental Day:"
  round(running total[rev_link:miles_tot,report] divide running total[rev_link:day_tot,report],0)/newline/align=i

;
replace profloss.eq
run/parameterfile=profloss_1 profloss.eq
rrepl profloss

/*------------------------------------------------------------------------
 Send report to screen
------------------------------------------------------------------------*/
view profloss

/*------------------------------------------------------------------------
 Prepare for job submission to RW
------------------------------------------------------------------------*/

define
   string action      = "Report" -- Post or Report
   string rptdesc     = "Contract Revenue By Vehicle Report" -- Report Title
   string rptname1    = "profloss" -- output file1
   string rptname2    = "" -- output file2 if applicable
   string rptname3    = "" -- output file3 if applicable
   string parfile     = "profloss_1.par" -- parameter.par file
   string xmlname     = "" -- xml for posting if applicable
   string exportname  = "" -- posting export file if applicable
   string startdate   = ""  -- requires: include "parameter.inc" for this value if needed
   string enddate     = ""  -- requires: include "parameter.inc" for this value if needed


list/domain="dummy"/nodefaults/nobanner
action/newline
rptdesc/newline
rptname1/newline
rptname2/newline
rptname3/newline
parfile/newline
xmlname/newline
exportname/newline
startdate/newline
enddate/newline
;
run/parameterfile
rrepl rwsubmitpar
run/parameterfile rwsubmitjob.mf


